name: Elite Trading Bot v8.0 - Scheduled Signal Generator

on:
  # Runs every hour at minute 0 (UTC)
  schedule:
    - cron: '0 * * * *'

# Workflow permissions
permissions:
  contents: read

jobs:
  run-trading-bot:
    runs-on: ubuntu-latest
    # Maximum time for the job before GitHub cancels it
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Create requirements.txt and Install dependencies
        run: |
          # Create temporary requirements file
          cat > requirements.txt << 'EOF'
          pandas>=2.1.0
          numpy>=1.26.0
          requests>=2.31.0
          python-dateutil>=2.8.2
          pytz>=2023.3
          websockets>=12.0
          EOF
          
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "‚úÖ Dependencies installed."
      
      - name: Verify minimum required secrets
        run: |
          echo "Checking required secrets..."
          # Check critical secrets (Telegram is essential for signaling)
          if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] || [ -z "${{ secrets.MAIN_CHAT_ID }}" ] || [ -z "${{ secrets.SIMPLE_CHAT_ID }}" ]; then
            echo "‚ùå ERROR: One or more critical Telegram secrets (BOT_TOKEN, MAIN_CHAT_ID, SIMPLE_CHAT_ID) are missing!"
            exit 1
          fi
          echo "‚úÖ Critical secrets configured."

      - name: Check if it's weekend (Gold market note)
        run: |
          DAY=$(date -u +%u) ¬†# 1=Monday, 6=Saturday, 7=Sunday
          HOUR=$(date -u +%H)
          echo "Current UTC time: $(date -u '+%Y-%m-%d %H:%M:%S')"
          if [ $DAY -eq 6 ] || ([ $DAY -eq 7 ] && [ $HOUR -lt 22 ]) || ([ $DAY -eq 5 ] && [ $HOUR -ge 22 ]); then
            echo "üìÖ Weekend/Off-Hours detected. XAUUSD (Gold) market may be closed. Bot should focus on 24/7 assets like BTCUSD."
          else
            echo "‚úÖ Weekday trading hours. All markets open."
          fi

      - name: Run elite trading bot v8.0
        env:
          # Pass required secrets
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          MAIN_CHAT_ID: ${{ secrets.MAIN_CHAT_ID }}
          SIMPLE_CHAT_ID: ${{ secrets.SIMPLE_CHAT_ID }}
          PYTHONUNBUFFERED: "1"
          
          # Pass optional secrets/defaults
          DERIV_APP_ID: ${{ secrets.DERIV_APP_ID }}
          ACCOUNT_BALANCE: ${{ secrets.ACCOUNT_BALANCE }}
          RISK_PERCENT: ${{ secrets.RISK_PERCENT }}
          MIN_CONFIDENCE: ${{ secrets.MIN_CONFIDENCE || '80' }}
          # Hardcode CHECK_NEWS to true since manual input is removed
          CHECK_NEWS: 'true' 
        
        run: |
          BOT_FILE=$(ls *trading_bot*.py 2>/dev/null | head -n 1 || ls *bot.py 2>/dev/null | head -n 1)
          
          if [ -z "$BOT_FILE" ]; then
            echo "‚ùå ERROR: No trading bot file found (e.g., trading_bot.py, elite_trading_bot_v8.py)."
            exit 1
          fi
          
          echo "ü§ñ Starting $BOT_FILE (Min confidence: ${MIN_CONFIDENCE:-80}%)"
          
          # Run the bot file
          python "$BOT_FILE"
        timeout-minutes: 15 # Set a 15-minute timeout for the main execution step
      
      - name: Send failure notification
        if: failure() && secrets.TELEGRAM_BOT_TOKEN != '' && secrets.MAIN_CHAT_ID != ''
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          MAIN_CHAT_ID: ${{ secrets.MAIN_CHAT_ID }}
        run: |
          # Simplified failure message
          MESSAGE="üö® <b>Elite Trading Bot v8.0 Failure</b>%0A%0A"
          MESSAGE="${MESSAGE}‚ùå Execution failed.%0A"
          MESSAGE="${MESSAGE}<b>Run:</b> #${{ github.run_number }}%0A"
          MESSAGE="${MESSAGE}<b>Time:</b> $(TZ='UTC' date '+%Y-%m-%d %H:%M:%S %Z')%0A%0A"
          MESSAGE="${MESSAGE}üîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${MAIN_CHAT_ID}" \
            -d "text=${MESSAGE}" \
            -d "parse_mode=HTML" \
            -d "disable_web_page_preview=true" || echo "‚ö†Ô∏è Failed to send Telegram notification"